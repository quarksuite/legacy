{"version":3,"file":"index.bundled.js","sources":["../../node_modules/@babel/runtime/helpers/defineProperty.js","index.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import _defineProperty from '@babel/runtime/helpers/defineProperty';\n\n/**\n\tX11 color names\n\thttp://www.w3.org/TR/css3-color/#svg-color\n*/\nvar w3cx11 = {\n  aliceblue: '#f0f8ff',\n  antiquewhite: '#faebd7',\n  aqua: '#00ffff',\n  aquamarine: '#7fffd4',\n  azure: '#f0ffff',\n  beige: '#f5f5dc',\n  bisque: '#ffe4c4',\n  black: '#000000',\n  blanchedalmond: '#ffebcd',\n  blue: '#0000ff',\n  blueviolet: '#8a2be2',\n  brown: '#a52a2a',\n  burlywood: '#deb887',\n  cadetblue: '#5f9ea0',\n  chartreuse: '#7fff00',\n  chocolate: '#d2691e',\n  coral: '#ff7f50',\n  cornflower: '#6495ed',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cyan: '#00ffff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  darkgreen: '#006400',\n  darkgrey: '#a9a9a9',\n  darkkhaki: '#bdb76b',\n  darkmagenta: '#8b008b',\n  darkolivegreen: '#556b2f',\n  darkorange: '#ff8c00',\n  darkorchid: '#9932cc',\n  darkred: '#8b0000',\n  darksalmon: '#e9967a',\n  darkseagreen: '#8fbc8f',\n  darkslateblue: '#483d8b',\n  darkslategray: '#2f4f4f',\n  darkslategrey: '#2f4f4f',\n  darkturquoise: '#00ced1',\n  darkviolet: '#9400d3',\n  deeppink: '#ff1493',\n  deepskyblue: '#00bfff',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1e90ff',\n  firebrick: '#b22222',\n  floralwhite: '#fffaf0',\n  forestgreen: '#228b22',\n  fuchsia: '#ff00ff',\n  gainsboro: '#dcdcdc',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#adff2f',\n  grey: '#808080',\n  honeydew: '#f0fff0',\n  hotpink: '#ff69b4',\n  indianred: '#cd5c5c',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  khaki: '#f0e68c',\n  laserlemon: '#ffff54',\n  lavender: '#e6e6fa',\n  lavenderblush: '#fff0f5',\n  lawngreen: '#7cfc00',\n  lemonchiffon: '#fffacd',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lightcyan: '#e0ffff',\n  lightgoldenrod: '#fafad2',\n  lightgoldenrodyellow: '#fafad2',\n  lightgray: '#d3d3d3',\n  lightgreen: '#90ee90',\n  lightgrey: '#d3d3d3',\n  lightpink: '#ffb6c1',\n  lightsalmon: '#ffa07a',\n  lightseagreen: '#20b2aa',\n  lightskyblue: '#87cefa',\n  lightslategray: '#778899',\n  lightslategrey: '#778899',\n  lightsteelblue: '#b0c4de',\n  lightyellow: '#ffffe0',\n  lime: '#00ff00',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  magenta: '#ff00ff',\n  maroon: '#800000',\n  maroon2: '#7f0000',\n  maroon3: '#b03060',\n  mediumaquamarine: '#66cdaa',\n  mediumblue: '#0000cd',\n  mediumorchid: '#ba55d3',\n  mediumpurple: '#9370db',\n  mediumseagreen: '#3cb371',\n  mediumslateblue: '#7b68ee',\n  mediumspringgreen: '#00fa9a',\n  mediumturquoise: '#48d1cc',\n  mediumvioletred: '#c71585',\n  midnightblue: '#191970',\n  mintcream: '#f5fffa',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  oldlace: '#fdf5e6',\n  olive: '#808000',\n  olivedrab: '#6b8e23',\n  orange: '#ffa500',\n  orangered: '#ff4500',\n  orchid: '#da70d6',\n  palegoldenrod: '#eee8aa',\n  palegreen: '#98fb98',\n  paleturquoise: '#afeeee',\n  palevioletred: '#db7093',\n  papayawhip: '#ffefd5',\n  peachpuff: '#ffdab9',\n  peru: '#cd853f',\n  pink: '#ffc0cb',\n  plum: '#dda0dd',\n  powderblue: '#b0e0e6',\n  purple: '#800080',\n  purple2: '#7f007f',\n  purple3: '#a020f0',\n  rebeccapurple: '#663399',\n  red: '#ff0000',\n  rosybrown: '#bc8f8f',\n  royalblue: '#4169e1',\n  saddlebrown: '#8b4513',\n  salmon: '#fa8072',\n  sandybrown: '#f4a460',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  skyblue: '#87ceeb',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#fffafa',\n  springgreen: '#00ff7f',\n  steelblue: '#4682b4',\n  tan: '#d2b48c',\n  teal: '#008080',\n  thistle: '#d8bfd8',\n  tomato: '#ff6347',\n  turquoise: '#40e0d0',\n  violet: '#ee82ee',\n  wheat: '#f5deb3',\n  white: '#ffffff',\n  whitesmoke: '#f5f5f5',\n  yellow: '#ffff00',\n  yellowgreen: '#9acd32'\n};\n\nvar d2Hex = s => (+s).toString(16).padStart(2, '0');\nvar checkFormat = (test, format) => {\n  var list = {\n    hex: /^#([\\da-f]{3}){1,2}$/i,\n    rgb: /^rgb\\((((((((1?[1-9]?\\d)|10\\d|(2[0-4]\\d)|25[0-5]),\\s?)){2}|((((1?[1-9]?\\d)|10\\d|(2[0-4]\\d)|25[0-5])\\s)){2})((1?[1-9]?\\d)|10\\d|(2[0-4]\\d)|25[0-5]))|((((([1-9]?\\d(\\.\\d+)?)|100|(\\.\\d+))%,\\s?){2}|((([1-9]?\\d(\\.\\d+)?)|100|(\\.\\d+))%\\s){2})(([1-9]?\\d(\\.\\d+)?)|100|(\\.\\d+))%))\\)$/i,\n    hsl: /^hsl\\(((((([12]?[1-9]?\\d)|[12]0\\d|(3[0-5]\\d))(\\.\\d+)?)|(\\.\\d+))(deg)?|(0|0?\\.\\d+)turn|(([0-6](\\.\\d+)?)|(\\.\\d+))rad)((,\\s?(([1-9]?\\d(\\.\\d+)?)|100|(\\.\\d+))%){2}|(\\s(([1-9]?\\d(\\.\\d+)?)|100|(\\.\\d+))%){2})\\)$/i\n  };\n  if (format === 'named') return w3cx11[test] !== undefined;\n  return list[format].test(test);\n};\nvar convertPercentage = percentage => {\n  return percentage / 100;\n}; // CSS RGB & HSL formats can be separated with commas or spaces\n\nvar parseSep = str => str.includes(',') ? ',' : ' ';\nvar hslData = hsl => {\n  // First check the format\n  if (!checkFormat(hsl, 'hsl')) throw Error('Not a valid hsl format'); // Split values from string\n\n  var data = hsl.substr(4).split(')')[0].split(parseSep(hsl));\n  var hValue = +data[0];\n  var sValue = convertPercentage(+data[1].substr(0, data[1].length - 1));\n  var lValue = convertPercentage(+data[2].substr(0, data[2].length - 1)); // Strip label from hue and convert to degrees (if needed)\n\n  if (data[0].includes('deg')) hValue = +data[0].substr(0, data[0].length - 3);else if (data[0].includes('rad')) hValue = Math.round(+data[0].substr(0, data[0].length - 3) * (180 / Math.PI));else if (data[0].includes('turn')) hValue = Math.round(+data[0].substr(0, data[0].length - 4) * 360);\n  if (hValue >= 360) hValue %= 360;\n  return [hValue, sValue, lValue];\n};\nvar rgbCalc = (h, s, l) => {\n  // Calculate chroma\n  var c = (1 - Math.abs(2 * l - 1)) * s;\n  var x = c * (1 - Math.abs(h / 60 % 2 - 1));\n  var m = l - c / 2; // Assign channels\n\n  var r = 0;\n  var g = 0;\n  var b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  }\n\n  r = (r + m) * 255;\n  g = (g + m) * 255;\n  b = (b + m) * 255;\n  return [Math.round(r), Math.round(g), Math.round(b)];\n};\nvar rgbData = rgb => {\n  // First, check the format\n  if (!checkFormat(rgb, 'rgb')) throw Error('Not a valid RGB format'); // Perform additional data transformations\n\n  return rgb.substr(4).split(')')[0].split(parseSep(rgb)).map(v => {\n    // Convert from percentage, else leave untouched\n    var value = v.includes('%') ? Math.round(convertPercentage(+v.substr(0, v.length - 1)) * 255).toString() : v;\n    return value;\n  });\n};\nvar hslCalc = (r, g, b) => {\n  // Find minimum and maximum channel values\n  var cmin = Math.min(r, g, b);\n  var cmax = Math.max(r, g, b);\n  var delta = cmax - cmin; // Set hsl\n\n  var h = 0;\n  var s = 0;\n  var l = 0; // Calculate hue\n\n  if (delta == 0) h = 0;\n  if (cmax == r) h = (g - b) / delta % 6;\n  if (cmax == g) h = (b - r) / delta + 2;\n  if (cmax == b) h = (r - g) / delta + 4;\n  h = Math.round(h * 60);\n  if (h < 0) h += 360; // Calculate lightness\n\n  l = (cmax + cmin) / 2; // calculate saturation\n\n  s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1)); // multiply s, l by 100\n\n  s = +(s * 100).toPrecision(3);\n  l = +(l * 100).toPrecision(3);\n  return [h, s, l];\n};\n\nvar hex2Rgb = hex => {\n  // Check the format\n  if (!checkFormat(hex, 'hex')) throw Error('Not a valid hex color format');\n  var [r, g, b] = Array.from(Array(3).fill('')); // #RGB || #RRGGBB\n\n  if (hex.length == 4) {\n    var rv = hex[1];\n    var gv = hex[2];\n    var bv = hex[3];\n    r = parseInt(rv + rv, 16);\n    g = parseInt(gv + gv, 16);\n    b = parseInt(bv + bv, 16);\n  } else if (hex.length == 7) {\n    var r1 = hex[1];\n    var r2 = hex[2];\n    var g1 = hex[3];\n    var g2 = hex[4];\n    var b1 = hex[5];\n    var b2 = hex[6];\n    r = parseInt(r1 + r2, 16);\n    g = parseInt(g1 + g2, 16);\n    b = parseInt(b1 + b2, 16);\n  }\n\n  return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n}; // RGB -> Hex\n\nvar rgb2Hex = rgb => {\n  var [r, g, b] = rgbData(rgb);\n  r = d2Hex(r);\n  g = d2Hex(g);\n  b = d2Hex(b);\n  return ['#', r, g, b].join('');\n}; // RGB -> HSL\n\nvar rgb2Hsl = rgb => {\n  var data = rgbData(rgb); // Make RGB channels fractions of 1\n\n  var r = +data[0] / 255;\n  var g = +data[1] / 255;\n  var b = +data[2] / 255;\n  var hsl = hslCalc(r, g, b);\n  return \"hsl(\".concat(isNaN(hsl[0]) ? 0 : hsl[0], \", \").concat(hsl[1], \"%, \").concat(hsl[2], \"%)\");\n}; // Hex -> HSL\n\nvar hex2Hsl = hex => rgb2Hsl(hex2Rgb(hex)); // Hex -> Named\n\nvar hex2Named = hex => {\n  // #RGB || #RRGGBB\n  if (hex.length == 4) {\n    var rv = hex[1];\n    var gv = hex[2];\n    var bv = hex[3];\n    hex = \"#\".concat(rv).concat(rv).concat(gv).concat(gv).concat(bv).concat(bv);\n  }\n\n  var color = Object.keys(w3cx11).filter(v => {\n    return hex === w3cx11[v];\n  })[0];\n  if (!color) throw Error(\"\".concat(hex, \" is not defined on the W3C named colors list\"));\n  return color;\n}; // RGB to Named\n\nvar rgb2Named = rgb => hex2Named(rgb2Hex(rgb)); // HSL -> RGB\n\nvar hsl2Rgb = hsl => {\n  var data = hslData(hsl);\n  var h = data[0];\n  var s = data[1];\n  var l = data[2];\n  var rgb = rgbCalc(h, s, l);\n  return \"rgb(\".concat(rgb[0], \", \").concat(rgb[1], \", \").concat(rgb[2], \")\");\n}; // HSL -> Hex\n\nvar hsl2Hex = hsl => rgb2Hex(hsl2Rgb(hsl)); // HSL -> Named\n\nvar hsl2Named = hsl => hex2Named(rgb2Hex(hsl2Rgb(hsl))); // Named -> RGB\n\nvar named2Rgb = name => hex2Rgb(w3cx11[name]); // Named -> HSL\n\nvar named2Hsl = name => hex2Hsl(w3cx11[name]); // Named -> Hex\n\nvar named2Hex = name => w3cx11[name];\n\nvar calculateDifference = (origin, target, p) => Math.round(((1 - p) * origin ** 2 + p * target ** 2) ** 0.5);\n\nvar calculateMix = (origin, target, amount) => {\n  var [O_RED, O_GREEN, O_BLUE] = origin.split(', ');\n  var [T_RED, T_GREEN, T_BLUE] = target.split(', ');\n  var RGB_STORE = new Map([[O_RED, T_RED], [O_GREEN, T_GREEN], [O_BLUE, T_BLUE]]);\n  return Array.from(RGB_STORE).map((_ref) => {\n    var [origin, target] = _ref;\n    var matchChars = /\\D/g;\n\n    var getValueOf = s => parseInt(s.replace(matchChars, ''));\n\n    return calculateDifference(getValueOf(origin), getValueOf(target), amount);\n  });\n};\n\nvar hexConvert = (color, to) => {\n  if (to === 'rgb') return hex2Rgb(color);\n  if (to === 'hsl') return hex2Hsl(color);\n  if (to === 'named') return hex2Named(color);\n  return color;\n};\n\nvar rgbConvert = (color, to) => {\n  if (to === 'hex') return rgb2Hex(color);\n  if (to === 'hsl') return rgb2Hsl(color);\n  if (to === 'named') return rgb2Named(color);\n  return color;\n};\n\nvar hslConvert = (color, to) => {\n  if (to === 'hex') return hsl2Hex(color);\n  if (to === 'rgb') return hsl2Rgb(color);\n  if (to === 'named') return hsl2Named(color);\n  return color;\n};\n\nvar namedConvert = (color, to) => {\n  if (to === 'hex') return named2Hex(color);\n  if (to === 'rgb') return named2Rgb(color);\n  if (to === 'hsl') return named2Hsl(color);\n  return color;\n};\n\nvar convert = function convert(color) {\n  var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'rgb';\n  var hex = checkFormat(color, 'hex');\n  var rgb = checkFormat(color, 'rgb');\n  var hsl = checkFormat(color, 'hsl');\n  var name = checkFormat(color, 'named');\n  if (hex) return hexConvert(color, to);\n  if (rgb) return rgbConvert(color, to);\n  if (hsl) return hslConvert(color, to);\n  if (name) return namedConvert(color, to);\n  return color;\n};\nvar spin = function spin(color) {\n  var rotation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 180;\n  var counterClockwise = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var [h, s, l] = hslData(convert(color, 'hsl'));\n  var calculatedHue = counterClockwise ? h - rotation : h + rotation;\n  h = calculatedHue < 0 ? (calculatedHue + 360) % 360 : calculatedHue % 360;\n  s = Math.round(s * 100);\n  l = Math.round(l * 100);\n  return convert(\"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\"));\n};\nvar blend = function blend(color, target) {\n  var amount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;\n  // Convert arguments to RGB as required by blend function\n  color = convert(color);\n  target = convert(target);\n  amount = convertPercentage(amount);\n  var [R, G, B] = calculateMix(color, target, amount);\n  return \"rgb(\".concat(R, \", \").concat(G, \", \").concat(B, \")\");\n};\n\nvar complementOf = color => spin(color);\nvar negationOf = color => blend(color, complementOf(color));\nvar mix = function mix(color, withTarget) {\n  var byAmount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;\n  return blend(color, withTarget, byAmount);\n};\nvar spinHueFrom = function spinHueFrom(color, toDegrees) {\n  var counterClockwise = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return spin(color, toDegrees, counterClockwise);\n};\nvar changeFormatOf = function changeFormatOf(color) {\n  var toTargetFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'rgb';\n  return convert(color, toTargetFormat);\n};\nvar analogousFrom = function analogousFrom(color) {\n  var spreadBy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 45;\n  color = convert(color);\n  var rightOfOrigin = convert(spin(color, spreadBy));\n  var leftOfOrigin = convert(spin(color, spreadBy, true));\n  return [leftOfOrigin, color, rightOfOrigin];\n};\nvar complementaryFrom = color => [convert(color), convert(complementOf(color))];\nvar triadFrom = function triadFrom(color) {\n  var complementSplitBy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60;\n  color = convert(color);\n  var complement = convert(complementOf(color));\n  var rightOfComplement = convert(spin(complement, complementSplitBy));\n  var leftOfComplement = convert(spin(complement, complementSplitBy, true));\n  return [color, leftOfComplement, rightOfComplement];\n};\nvar tetradFrom = function tetradFrom(color) {\n  var spreadBy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 90;\n  color = convert(color);\n  var complement = convert(complementOf(color));\n  var shiftFromOrigin = convert(spin(color, spreadBy));\n  var shiftFromComplement = convert(spin(complement, spreadBy));\n  return [color, complement, shiftFromOrigin, shiftFromComplement];\n};\nvar createBlendFrom = function createBlendFrom(color, toTarget) {\n  var withContrast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 97;\n  var upToRange = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 3;\n  color = convert(color);\n  toTarget = convert(toTarget);\n  return Array.from(Array(upToRange).fill(color)).map((origin, step) => {\n    var target = toTarget;\n    var contrast = withContrast;\n    var range = upToRange;\n    var currentContrast = contrast - contrast / range * step;\n    return mix(origin, target, currentContrast);\n  }).reverse();\n};\nvar createTintsFrom = function createTintsFrom(color) {\n  var withContrast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 97;\n  var upToRange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  return createBlendFrom(color, convert('#fff'), withContrast, upToRange);\n};\nvar createTonesFrom = function createTonesFrom(color) {\n  var withContrast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 97;\n  var upToRange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  return createBlendFrom(color, convert('#aaa'), withContrast, upToRange);\n};\nvar createShadesFrom = function createShadesFrom(color) {\n  var withContrast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 97;\n  var upToRange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  return createBlendFrom(color, convert('#111'), withContrast, upToRange);\n};\nclass Color {\n  constructor(color) {\n    _defineProperty(this, \"color\", 'dodgerblue');\n\n    _defineProperty(this, \"origin\", this.color);\n\n    _defineProperty(this, \"current\", this.color);\n\n    _defineProperty(this, \"scheme\", []);\n\n    _defineProperty(this, \"variation\", []);\n\n    _defineProperty(this, \"palette\", []);\n\n    this.color = color;\n    this.origin = convert(color);\n    this.current = convert(color);\n  }\n\n  get originalValue() {\n    return this.origin;\n  }\n\n  get value() {\n    return this.current;\n  }\n\n  get schemes() {\n    return [...new Set(this.scheme)];\n  }\n\n  get variations() {\n    return this.variation;\n  }\n\n  get palettes() {\n    return [this.current, [...new Set(this.variation)]];\n  }\n\n  get data() {\n    return {\n      origin: this.origin,\n      current: this.current,\n      scheme: this.scheme,\n      variation: this.variation,\n      palette: this.palette\n    };\n  }\n\n  log() {\n    var {\n      origin,\n      current,\n      scheme,\n      variation,\n      palette\n    } = this.data;\n\n    var read = data => JSON.stringify(data, null, 2);\n\n    console.log(\"\\ncolor.originalValue: \".concat(origin, \"\\n---------------------------------------------------------------\\ncolor.value: \").concat(current, \"\\n===============================================================\\ncolor.schemes: \").concat(read(scheme), \";\\n===============================================================\\ncolor.variations: \").concat(read(variation), \";\\n===============================================================\\ncolor.palettes: \").concat(read(palette), \";\\n===============================================================\\n    \"));\n  }\n\n  formatSwatch(format) {\n    this.current = changeFormatOf(this.current, format);\n    return this;\n  }\n\n  shiftHue(toDegrees) {\n    var counterClockwise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.current = spinHueFrom(this.current, toDegrees, counterClockwise);\n    return this;\n  }\n\n  fetchComplement() {\n    this.current = complementOf(this.current);\n    return this;\n  }\n\n  neutralize() {\n    this.current = negationOf(this.current);\n    return this;\n  }\n\n  mix(withTarget) {\n    var byAmount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n    this.current = mix(this.current, withTarget, byAmount);\n    return this;\n  }\n\n  createComplementary() {\n    this.scheme = [...this.scheme, ...complementaryFrom(this.current)];\n    return this;\n  }\n\n  createAnalogous() {\n    var withSpread = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 45;\n    this.scheme = [...this.scheme, ...analogousFrom(this.current, withSpread)];\n    return this;\n  }\n\n  createTriad() {\n    var withComplementSplit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 60;\n    this.scheme = [...this.scheme, ...triadFrom(this.current, withComplementSplit)];\n    return this;\n  }\n\n  createTetrad() {\n    var withSpread = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 90;\n    this.scheme = [...this.scheme, ...tetradFrom(this.current, withSpread)];\n    return this;\n  } // variant operations\n\n\n  createBlend(toTarget) {\n    var withContrast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 97;\n    var upToRange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n    this.variation = [...this.variation, ...createBlendFrom(this.current, toTarget, withContrast, upToRange)];\n    return this;\n  }\n\n  createTints() {\n    var withContrast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 97;\n    var upToRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    this.variation = [...this.variation, ...createTintsFrom(this.current, withContrast, upToRange)];\n    return this;\n  }\n\n  createTones() {\n    var withContrast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 97;\n    var upToRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    this.variation = [...this.variation, ...createTonesFrom(this.current, withContrast, upToRange)];\n    return this;\n  }\n\n  createShades() {\n    var withContrast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 97;\n    var upToRange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    this.variation = [...this.variation, ...createShadesFrom(this.current, withContrast, upToRange)];\n    return this;\n  }\n\n}\nvar color = color => new Color(color);\nvar colour = color => new Color(color);\nvar c = color => new Color(color);\n\nvar index = {\n  Color,\n  color,\n  colour,\n  c\n};\n\nexport default index;\n"],"names":["defineProperty","obj","key","value","Object","enumerable","configurable","writable","w3cx11","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d2Hex","s","toString","padStart","checkFormat","test","format","undefined","hex","rgb","hsl","convertPercentage","percentage","parseSep","str","includes","hslData","Error","data","substr","split","hValue","sValue","length","lValue","Math","round","PI","rgbData","map","v","hex2Rgb","r","g","b","Array","from","fill","rv","gv","bv","parseInt","r1","r2","g1","g2","b1","b2","concat","rgb2Hex","join","rgb2Hsl","cmin","min","cmax","max","delta","h","l","abs","toPrecision","hslCalc","isNaN","hex2Hsl","hex2Named","color","keys","filter","hsl2Rgb","c","x","m","rgbCalc","calculateMix","origin","target","amount","O_RED","O_GREEN","O_BLUE","T_RED","T_GREEN","T_BLUE","RGB_STORE","Map","_ref","matchChars","getValueOf","replace","p","calculateDifference","hexConvert","to","rgbConvert","hslConvert","hsl2Named","namedConvert","name","named2Rgb","named2Hsl","convert","arguments","spin","rotation","counterClockwise","calculatedHue","blend","R","G","B","complementOf","mix","withTarget","byAmount","analogousFrom","spreadBy","rightOfOrigin","leftOfOrigin","complementaryFrom","triadFrom","complementSplitBy","complement","rightOfComplement","leftOfComplement","tetradFrom","shiftFromOrigin","shiftFromComplement","createBlendFrom","toTarget","withContrast","upToRange","step","reverse","createTintsFrom","createTonesFrom","createShadesFrom","Color","constructor","_defineProperty","this","current","Set","scheme","variation","palette","log","read","JSON","stringify","console","formatSwatch","toTargetFormat","changeFormatOf","shiftHue","toDegrees","spinHueFrom","fetchComplement","neutralize","negationOf","createComplementary","createAnalogous","withSpread","createTriad","withComplementSplit","createTetrad","createBlend","createTints","createTones","createShades","index","colour"],"mappings":"AAeA,IAAIA,EAfJ,SAAyBC,EAAKC,EAAKC,UAC7BD,KAAOD,EACTG,OAAOJ,eAAeC,EAAKC,EAAK,CAC9BC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOC,EAGNF,GCNLO,EAAS,CACXC,UAAW,UACXC,aAAc,UACdC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,MAAO,UACPC,WAAY,UACZC,eAAgB,UAChBC,SAAU,UACVC,QAAS,UACTC,KAAM,UACNC,SAAU,UACVC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,UAAW,UACXC,SAAU,UACVC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,WAAY,UACZC,aAAc,UACdC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,SAAU,UACVC,YAAa,UACbC,QAAS,UACTC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,WAAY,UACZC,KAAM,UACNC,UAAW,UACXC,KAAM,UACNC,MAAO,UACPC,YAAa,UACbC,KAAM,UACNC,SAAU,UACVC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,SAAU,UACVC,cAAe,UACfC,UAAW,UACXC,aAAc,UACdC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,eAAgB,UAChBC,qBAAsB,UACtBC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,cAAe,UACfC,aAAc,UACdC,eAAgB,UAChBC,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,KAAM,UACNC,UAAW,UACXC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,eAAgB,UAChBC,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,aAAc,UACdC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,YAAa,UACbC,KAAM,UACNC,QAAS,UACTC,MAAO,UACPC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,cAAe,UACfC,UAAW,UACXC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,UAAW,UACXC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,cAAe,UACfC,IAAK,UACLC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,OAAQ,UACRC,WAAY,UACZC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,OAAQ,UACRC,YAAa,WAGXC,EAAQC,KAAOA,GAAGC,SAAS,IAAIC,SAAS,EAAG,KAC3CC,EAAc,CAACC,EAAMC,IAMR,UAAXA,OAA4CC,IAAjBnK,EAAOiK,GAL3B,CACTG,IAAK,wBACLC,IAAK,mRACLC,IAAK,gNAGKJ,GAAQD,KAAKA,GAEvBM,EAAoBC,GACfA,EAAa,IAGlBC,EAAWC,GAAOA,EAAIC,SAAS,KAAO,IAAM,IAC5CC,EAAUN,QAEPN,EAAYM,EAAK,OAAQ,MAAMO,MAAM,8BAEtCC,EAAOR,EAAIS,OAAO,GAAGC,MAAM,KAAK,GAAGA,MAAMP,EAASH,IAClDW,GAAUH,EAAK,GACfI,EAASX,GAAmBO,EAAK,GAAGC,OAAO,EAAGD,EAAK,GAAGK,OAAS,IAC/DC,EAASb,GAAmBO,EAAK,GAAGC,OAAO,EAAGD,EAAK,GAAGK,OAAS,WAE/DL,EAAK,GAAGH,SAAS,OAAQM,GAAUH,EAAK,GAAGC,OAAO,EAAGD,EAAK,GAAGK,OAAS,GAAYL,EAAK,GAAGH,SAAS,OAAQM,EAASI,KAAKC,OAAOR,EAAK,GAAGC,OAAO,EAAGD,EAAK,GAAGK,OAAS,IAAM,IAAME,KAAKE,KAAcT,EAAK,GAAGH,SAAS,UAASM,EAASI,KAAKC,MAA+C,KAAxCR,EAAK,GAAGC,OAAO,EAAGD,EAAK,GAAGK,OAAS,KACpRF,GAAU,MAAKA,GAAU,KACtB,CAACA,EAAQC,EAAQE,IA2CtBI,EAAUnB,QAEPL,EAAYK,EAAK,OAAQ,MAAMQ,MAAM,iCAEnCR,EAAIU,OAAO,GAAGC,MAAM,KAAK,GAAGA,MAAMP,EAASJ,IAAMoB,IAAIC,GAE9CA,EAAEf,SAAS,KAAOU,KAAKC,MAAsD,IAAhDf,GAAmBmB,EAAEX,OAAO,EAAGW,EAAEP,OAAS,KAAWrB,WAAa4B,IA8B3GC,EAAUvB,QAEPJ,EAAYI,EAAK,OAAQ,MAAMS,MAAM,oCACrCe,EAAGC,EAAGC,GAAKC,MAAMC,KAAKD,MAAM,GAAGE,KAAK,QAEvB,GAAd7B,EAAIe,OAAa,KACfe,EAAK9B,EAAI,GACT+B,EAAK/B,EAAI,GACTgC,EAAKhC,EAAI,GACbwB,EAAIS,SAASH,EAAKA,EAAI,IACtBL,EAAIQ,SAASF,EAAKA,EAAI,IACtBL,EAAIO,SAASD,EAAKA,EAAI,SACjB,GAAkB,GAAdhC,EAAIe,OAAa,KACtBmB,EAAKlC,EAAI,GACTmC,EAAKnC,EAAI,GACToC,EAAKpC,EAAI,GACTqC,EAAKrC,EAAI,GACTsC,EAAKtC,EAAI,GACTuC,EAAKvC,EAAI,GACbwB,EAAIS,SAASC,EAAKC,EAAI,IACtBV,EAAIQ,SAASG,EAAKC,EAAI,IACtBX,EAAIO,SAASK,EAAKC,EAAI,UAGjB,OAAOC,OAAOhB,EAAG,MAAMgB,OAAOf,EAAG,MAAMe,OAAOd,EAAG,MAGtDe,EAAUxC,QACPuB,EAAGC,EAAGC,GAAKN,EAAQnB,SAIjB,CAAC,IAHRuB,EAAIhC,EAAMgC,GACVC,EAAIjC,EAAMiC,GACVC,EAAIlC,EAAMkC,IACYgB,KAAK,KAGzBC,EAAU1C,QACRS,EAAOU,EAAQnB,GAKfC,EAnEQ,EAACsB,EAAGC,EAAGC,SAEfkB,EAAO3B,KAAK4B,IAAIrB,EAAGC,EAAGC,GACtBoB,EAAO7B,KAAK8B,IAAIvB,EAAGC,EAAGC,GACtBsB,EAAQF,EAAOF,EAEfK,EAAI,EAEJC,EAAI,SAEK,GAATF,IAAYC,EAAI,GAChBH,GAAQtB,IAAGyB,GAAKxB,EAAIC,GAAKsB,EAAQ,GACjCF,GAAQrB,IAAGwB,GAAKvB,EAAIF,GAAKwB,EAAQ,GACjCF,GAAQpB,IAAGuB,GAAKzB,EAAIC,GAAKuB,EAAQ,IACrCC,EAAIhC,KAAKC,MAAU,GAAJ+B,IACP,IAAGA,GAAK,KAEhBC,GAAKJ,EAAOF,GAAQ,EAMb,CAACK,IAFE,KAFG,GAATD,EAAa,EAAIA,GAAS,EAAI/B,KAAKkC,IAAI,EAAID,EAAI,MAEpCE,YAAY,GAC3BF,IAAU,IAAJA,GAASE,YAAY,KA6CjBC,EAHD3C,EAAK,GAAK,KACVA,EAAK,GAAK,KACVA,EAAK,GAAK,WAEZ,OAAO8B,OAAOc,MAAMpD,EAAI,IAAM,EAAIA,EAAI,GAAI,MAAMsC,OAAOtC,EAAI,GAAI,OAAOsC,OAAOtC,EAAI,GAAI,OAG1FqD,EAAUvD,GAAO2C,EAAQpB,EAAQvB,IAEjCwD,EAAYxD,OAEI,GAAdA,EAAIe,OAAa,KACfe,EAAK9B,EAAI,GACT+B,EAAK/B,EAAI,GACTgC,EAAKhC,EAAI,GACbA,EAAM,IAAIwC,OAAOV,GAAIU,OAAOV,GAAIU,OAAOT,GAAIS,OAAOT,GAAIS,OAAOR,GAAIQ,OAAOR,OAGtEyB,EAAQjO,OAAOkO,KAAK9N,GAAQ+N,OAAOrC,GAC9BtB,IAAQpK,EAAO0L,IACrB,OACEmC,EAAO,MAAMhD,MAAM,GAAG+B,OAAOxC,EAAK,wDAChCyD,GAKLG,EAAU1D,QACRQ,EAAOF,EAAQN,GAIfD,EAnJQ,EAACgD,EAAGxD,EAAGyD,SAEfW,GAAK,EAAI5C,KAAKkC,IAAI,EAAID,EAAI,IAAMzD,EAChCqE,EAAID,GAAK,EAAI5C,KAAKkC,IAAIF,EAAI,GAAK,EAAI,IACnCc,EAAIb,EAAIW,EAAI,EAEZrC,EAAI,EACJC,EAAI,EACJC,EAAI,SAEJ,GAAKuB,GAAKA,EAAI,IAChBzB,EAAIqC,EACJpC,EAAIqC,EACJpC,EAAI,GACK,IAAMuB,GAAKA,EAAI,KACxBzB,EAAIsC,EACJrC,EAAIoC,EACJnC,EAAI,GACK,KAAOuB,GAAKA,EAAI,KACzBzB,EAAI,EACJC,EAAIoC,EACJnC,EAAIoC,GACK,KAAOb,GAAKA,EAAI,KACzBzB,EAAI,EACJC,EAAIqC,EACJpC,EAAImC,GACK,KAAOZ,GAAKA,EAAI,KACzBzB,EAAIsC,EACJrC,EAAI,EACJC,EAAImC,GACK,KAAOZ,GAAKA,EAAI,MACzBzB,EAAIqC,EACJpC,EAAI,EACJC,EAAIoC,GAGNtC,EAAc,KAATA,EAAIuC,GACTtC,EAAc,KAATA,EAAIsC,GACTrC,EAAc,KAATA,EAAIqC,GACF,CAAC9C,KAAKC,MAAMM,GAAIP,KAAKC,MAAMO,GAAIR,KAAKC,MAAMQ,KA4GvCsC,CAHFtD,EAAK,GACLA,EAAK,GACLA,EAAK,UAEN,OAAO8B,OAAOvC,EAAI,GAAI,MAAMuC,OAAOvC,EAAI,GAAI,MAAMuC,OAAOvC,EAAI,GAAI,MAerEgE,EAAe,CAACC,EAAQC,EAAQC,SAC7BC,EAAOC,EAASC,GAAUL,EAAOtD,MAAM,OACvC4D,EAAOC,EAASC,GAAUP,EAAOvD,MAAM,MACxC+D,EAAY,IAAIC,IAAI,CAAC,CAACP,EAAOG,GAAQ,CAACF,EAASG,GAAU,CAACF,EAAQG,YAC/D/C,MAAMC,KAAK+C,GAAWtD,IAAKwD,QAC3BX,EAAQC,GAAUU,EACnBC,EAAa,MAEbC,EAAatF,GAAKwC,SAASxC,EAAEuF,QAAQF,EAAY,WAV/B,EAACZ,EAAQC,EAAQc,IAAMhE,KAAKC,QAAQ,EAAI+D,GAAKf,GAAU,EAAIe,EAAId,GAAU,IAAM,IAY9Fe,CAAoBH,EAAWb,GAASa,EAAWZ,GAASC,MAInEe,EAAa,CAAC1B,EAAO2B,IACZ,QAAPA,EAAqB7D,EAAQkC,GACtB,QAAP2B,EAAqB7B,EAAQE,GACtB,UAAP2B,EAAuB5B,EAAUC,GAC9BA,EAGL4B,EAAa,CAAC5B,EAAO2B,IACZ,QAAPA,EAAqB3C,EAAQgB,GACtB,QAAP2B,EAAqBzC,EAAQc,GACtB,UAAP2B,EA/CiB5B,EAAUf,EA+CMgB,IAC9BA,EAGL6B,EAAa,CAAC7B,EAAO2B,IACZ,QAAPA,EAzCe3C,EAAQmB,EAyCMH,IACtB,QAAP2B,EAAqBxB,EAAQH,GACtB,UAAP2B,EAzCUlF,CAAAA,GAAOsD,EAAUf,EAAQmB,EAAQ1D,KAyCpBqF,CAAU9B,GAC9BA,EAGL+B,EAAe,CAAC/B,EAAO2B,IACd,QAAPA,EAxCkBxP,EAwCa6N,GACxB,QAAP2B,EA7CUK,CAAAA,GAAQlE,EAAQ3L,EAAO6P,IA6CZC,CAAUjC,GACxB,QAAP2B,EA5CUK,CAAAA,GAAQlC,EAAQ3N,EAAO6P,IA4CZE,CAAUlC,GAC5BA,EAGLmC,EAAU,SAAiBnC,OACzB2B,EAAKS,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,MACzE7F,EAAMJ,EAAY6D,EAAO,OACzBxD,EAAML,EAAY6D,EAAO,OACzBvD,EAAMN,EAAY6D,EAAO,OACzBgC,EAAO7F,EAAY6D,EAAO,gBAC1BzD,EAAYmF,EAAW1B,EAAO2B,GAC9BnF,EAAYoF,EAAW5B,EAAO2B,GAC9BlF,EAAYoF,EAAW7B,EAAO2B,GAC9BK,EAAaD,EAAa/B,EAAO2B,GAC9B3B,GAELqC,EAAO,SAAcrC,OACnBsC,EAAWF,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,IAC/EG,EAAmBH,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,IAAmBA,UAAU,IACjF5C,EAAGxD,EAAGyD,GAAK1C,EAAQoF,EAAQnC,EAAO,QACnCwC,EAAgBD,EAAmB/C,EAAI8C,EAAW9C,EAAI8C,SAC1D9C,EAAIgD,EAAgB,GAAKA,EAAgB,KAAO,IAAMA,EAAgB,IACtExG,EAAIwB,KAAKC,MAAU,IAAJzB,GACfyD,EAAIjC,KAAKC,MAAU,IAAJgC,GACR0C,EAAQ,OAAOpD,OAAOS,EAAG,MAAMT,OAAO/C,EAAG,OAAO+C,OAAOU,EAAG,QAE/DgD,EAAQ,SAAezC,EAAOU,OAC5BC,EAASyB,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GAEjFpC,EAAQmC,EAAQnC,GAChBU,EAASyB,EAAQzB,GACjBC,EAASjE,EAAkBiE,OACtB+B,EAAGC,EAAGC,GAAKpC,EAAaR,EAAOU,EAAQC,SACrC,OAAO5B,OAAO2D,EAAG,MAAM3D,OAAO4D,EAAG,MAAM5D,OAAO6D,EAAG,MAGtDC,EAAe7C,GAASqC,EAAKrC,GAE7B8C,EAAM,SAAa9C,EAAO+C,OACxBC,EAAWZ,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,UAC5EK,EAAMzC,EAAO+C,EAAYC,IAU9BC,EAAgB,SAAuBjD,OACrCkD,EAAWd,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnFpC,EAAQmC,EAAQnC,OACZmD,EAAgBhB,EAAQE,EAAKrC,EAAOkD,IACpCE,EAAejB,EAAQE,EAAKrC,EAAOkD,GAAU,UAC1C,CAACE,EAAcpD,EAAOmD,IAE3BE,EAAoBrD,GAAS,CAACmC,EAAQnC,GAAQmC,EAAQU,EAAa7C,KACnEsD,EAAY,SAAmBtD,OAC7BuD,EAAoBnB,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GAC5FpC,EAAQmC,EAAQnC,OACZwD,EAAarB,EAAQU,EAAa7C,IAClCyD,EAAoBtB,EAAQE,EAAKmB,EAAYD,IAC7CG,EAAmBvB,EAAQE,EAAKmB,EAAYD,GAAmB,UAC5D,CAACvD,EAAO0D,EAAkBD,IAE/BE,EAAa,SAAoB3D,OAC/BkD,EAAWd,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnFpC,EAAQmC,EAAQnC,OACZwD,EAAarB,EAAQU,EAAa7C,IAClC4D,EAAkBzB,EAAQE,EAAKrC,EAAOkD,IACtCW,EAAsB1B,EAAQE,EAAKmB,EAAYN,UAC5C,CAAClD,EAAOwD,EAAYI,EAAiBC,IAE1CC,EAAkB,SAAyB9D,EAAO+D,OAChDC,EAAe5B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnF6B,EAAY7B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,SACpFpC,EAAQmC,EAAQnC,GAChB+D,EAAW5B,EAAQ4B,GACZ7F,MAAMC,KAAKD,MAAM+F,GAAW7F,KAAK4B,IAAQpC,IAAI,CAAC6C,EAAQyD,IAKpDpB,EAAIrC,EAJEsD,EACEC,EAAAA,EACHC,EACwCC,IAEnDC,WAEDC,EAAkB,SAAyBpE,OACzCgE,EAAe5B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnF6B,EAAY7B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,SAC7E0B,EAAgB9D,EAAOmC,EAAQ,QAAS6B,EAAcC,IAE3DI,EAAkB,SAAyBrE,OACzCgE,EAAe5B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnF6B,EAAY7B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,SAC7E0B,EAAgB9D,EAAOmC,EAAQ,QAAS6B,EAAcC,IAE3DK,EAAmB,SAA0BtE,OAC3CgE,EAAe5B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnF6B,EAAY7B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,SAC7E0B,EAAgB9D,EAAOmC,EAAQ,QAAS6B,EAAcC,IAE/D,MAAMM,EACJC,YAAYxE,GACVyE,EAAgBC,KAAM,QAAS,cAE/BD,EAAgBC,KAAM,SAAUA,KAAK1E,OAErCyE,EAAgBC,KAAM,UAAWA,KAAK1E,OAEtCyE,EAAgBC,KAAM,SAAU,IAEhCD,EAAgBC,KAAM,YAAa,IAEnCD,EAAgBC,KAAM,UAAW,SAE5B1E,MAAQA,OACRS,OAAS0B,EAAQnC,QACjB2E,QAAUxC,EAAQnC,8BAIhB0E,KAAKjE,0BAILiE,KAAKC,4BAIL,IAAI,IAAIC,IAAIF,KAAKG,iCAIjBH,KAAKI,+BAIL,CAACJ,KAAKC,QAAS,IAAI,IAAIC,IAAIF,KAAKI,8BAIhC,CACLrE,OAAQiE,KAAKjE,OACbkE,QAASD,KAAKC,QACdE,OAAQH,KAAKG,OACbC,UAAWJ,KAAKI,UAChBC,QAASL,KAAKK,SAIlBC,UACMvE,OACFA,EADEkE,QAEFA,EAFEE,OAGFA,EAHEC,UAIFA,EAJEC,QAKFA,GACEL,KAAKzH,KAELgI,EAAOhI,GAAQiI,KAAKC,UAAUlI,EAAM,KAAM,GAE9CmI,QAAQJ,IAAI,0BAA0BjG,OAAO0B,EAAQ,oFAAoF1B,OAAO4F,EAAS,sFAAsF5F,OAAOkG,EAAKJ,GAAS,0FAA0F9F,OAAOkG,EAAKH,GAAY,wFAAwF/F,OAAOkG,EAAKF,GAAU,6EAGteM,aAAahJ,eACNsI,QAxHY,SAAwB3E,OACvCsF,EAAiBlD,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,aAClFD,EAAQnC,EAAOsF,GAsHLC,CAAeb,KAAKC,QAAStI,GACrCqI,KAGTc,SAASC,OACHlD,EAAmBH,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,IAAmBA,UAAU,eACjFuC,QAlIS,SAAqB3E,EAAOyF,OACxClD,EAAmBH,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,IAAmBA,UAAU,UAC/EC,EAAKrC,EAAOyF,EAAWlD,GAgIbmD,CAAYhB,KAAKC,QAASc,EAAWlD,GAC7CmC,KAGTiB,8BACOhB,QAAU9B,EAAa6B,KAAKC,SAC1BD,KAGTkB,yBACOjB,QAjJQ3E,CAAAA,GAASyC,EAAMzC,EAAO6C,EAAa7C,IAiJjC6F,CAAWnB,KAAKC,SACxBD,KAGT5B,IAAIC,OACEC,EAAWZ,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,eAC9EuC,QAAU7B,EAAI4B,KAAKC,QAAS5B,EAAYC,GACtC0B,KAGToB,kCACOjB,OAAS,IAAIH,KAAKG,UAAWxB,EAAkBqB,KAAKC,UAClDD,KAGTqB,sBACMC,EAAa5D,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,eAChFyC,OAAS,IAAIH,KAAKG,UAAW5B,EAAcyB,KAAKC,QAASqB,IACvDtB,KAGTuB,kBACMC,EAAsB9D,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,eACzFyC,OAAS,IAAIH,KAAKG,UAAWvB,EAAUoB,KAAKC,QAASuB,IACnDxB,KAGTyB,mBACMH,EAAa5D,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,eAChFyC,OAAS,IAAIH,KAAKG,UAAWlB,EAAWe,KAAKC,QAASqB,IACpDtB,KAIT0B,YAAYrC,OACNC,EAAe5B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnF6B,EAAY7B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,cAC/E0C,UAAY,IAAIJ,KAAKI,aAAchB,EAAgBY,KAAKC,QAASZ,EAAUC,EAAcC,IACvFS,KAGT2B,kBACMrC,EAAe5B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnF6B,EAAY7B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,cAC/E0C,UAAY,IAAIJ,KAAKI,aAAcV,EAAgBM,KAAKC,QAASX,EAAcC,IAC7ES,KAGT4B,kBACMtC,EAAe5B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnF6B,EAAY7B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,cAC/E0C,UAAY,IAAIJ,KAAKI,aAAcT,EAAgBK,KAAKC,QAASX,EAAcC,IAC7ES,KAGT6B,mBACMvC,EAAe5B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,GACnF6B,EAAY7B,UAAU9E,OAAS,QAAsBhB,IAAjB8F,UAAU,GAAmBA,UAAU,GAAK,cAC/E0C,UAAY,IAAIJ,KAAKI,aAAcR,EAAiBI,KAAKC,QAASX,EAAcC,IAC9ES,MAIX,IAII8B,EAAQ,CACVjC,MAAAA,EACAvE,MANUA,GAAS,IAAIuE,EAAMvE,GAO7ByG,OANWzG,GAAS,IAAIuE,EAAMvE,GAO9BI,EANMJ,GAAS,IAAIuE,EAAMvE"}